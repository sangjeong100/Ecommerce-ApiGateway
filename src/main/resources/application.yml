server:
  port: 8000
  
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

# actuator 기능 사용을 위한 설정 
management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh
  
      
spring:
  application:
    name: gateway-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  cloud:
    gateway:
      default-filters: #외부정보를 연결해서 사용 가능 ->MS 자체는 재기동 안해도 된다. 
        - name: GlobalFilter # filter 우선순위 변견이 없다면 Global >Custom > logging 순으로 수행
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes: #MS routes 설정 
        - id: first-service #routes id 
          uri: lb://MY-FIRST-SERVICE #로드밸런서://discovery등록명  #http://localhost:8081/ #타겟 주소
          predicates: #조건절
            - Path=/first-service/**
          filters: #필터적용
#            - AddRequestHeader=first-request, first-requset-header2
#            - AddResponseHeader=first-response, firest-response-header2
            - CustomFilter 
        - id: second-service
          uri: lb://MY-SECOND-SERVICE #http://localhost:8082/
          predicates: #조건절
            - Path=/second-service/**
          filters:
#            - AddRequestHeader=second-request, second-requset-header2
#            - AddResponseHeader=second-response, second-response-header2
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Hi, there.
                preLogger: true
                postLogger: true 
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/** 
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            
            
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/** 
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**      